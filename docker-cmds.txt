Here’s a comprehensive list of Docker commands organized by the typical workflow: creating a Dockerfile, building an image, and managing containers.

1. Creating a Dockerfile
Create and Edit Dockerfile

Create a Dockerfile:
sh
Copy code
touch Dockerfile
Edit Dockerfile:
Use your preferred text editor (e.g., nano, vim, or an IDE) to add instructions to your Dockerfile.
sh
Copy code
nano Dockerfile
2. Building Docker Images
Build and Manage Docker Images

Build an Image from a Dockerfile:
sh
Copy code
docker build -t my-image:tag .
List Docker Images:
sh
Copy code
docker images
Remove a Docker Image:
sh
Copy code
docker rmi my-image:tag
Tag an Image:
sh
Copy code
docker tag my-image:tag new-image:tag
Push an Image to a Registry:
sh
Copy code
docker push my-image:tag
Pull an Image from a Registry:
sh
Copy code
docker pull my-image:tag
3. Running Docker Containers
Create, Start, and Manage Containers

Run a Container:
sh
Copy code
docker run -d --name my-container my-image:tag
Run a Container with Port Mapping:
sh
Copy code
docker run -d -p 8080:80 --name my-container my-image:tag
Run a Container with Volume Mounting:
sh
Copy code
docker run -d -v /host/path:/container/path --name my-container my-image:tag
List Running Containers:
sh
Copy code
docker ps
List All Containers:
sh
Copy code
docker ps -a
Stop a Running Container:
sh
Copy code
docker stop my-container
Start a Stopped Container:
sh
Copy code
docker start my-container
Restart a Container:
sh
Copy code
docker restart my-container
Remove a Container:
sh
Copy code
docker rm my-container
4. Inspecting Docker Objects
Inspect Images and Containers

Inspect an Image:
sh
Copy code
docker inspect my-image:tag
Inspect a Container:
sh
Copy code
docker inspect my-container
5. Managing Docker Volumes
Create and Manage Volumes

Create a Volume:
sh
Copy code
docker volume create my-volume
List Volumes:
sh
Copy code
docker volume ls
Remove a Volume:
sh
Copy code
docker volume rm my-volume
6. Managing Docker Networks
Create and Manage Networks

Create a Network:
sh
Copy code
docker network create my-network
List Networks:
sh
Copy code
docker network ls
Remove a Network:
sh
Copy code
docker network rm my-network
7. Docker Compose
Managing Multi-Container Applications

Start Services Defined in a Compose File:
sh
Copy code
docker-compose up -d
Stop Services Defined in a Compose File:
sh
Copy code
docker-compose down
View Compose Logs:
sh
Copy code
docker-compose logs
Example Dockerfile
Here’s a simple example of a Dockerfile for a Node.js application:

Dockerfile
Copy code
# Use the official Node.js image from the Docker Hub
FROM node:14

# Create and change to the app directory
WORKDIR /usr/src/app

# Copy application dependency manifests to the container image
COPY package*.json ./

# Install the dependencies
RUN npm install

# Copy local code to the container image
COPY . .

# Run the web service on container startup
CMD ["node", "app.js"]

# Document that the service listens on port 8080
EXPOSE 8080
Summary of Workflow Commands
Create and Edit Dockerfile:

sh
Copy code
touch Dockerfile
nano Dockerfile
Build and Manage Docker Images:

sh
Copy code
docker build -t my-image:tag .
docker images
docker rmi my-image:tag
docker tag my-image:tag new-image:tag
docker push my-image:tag
docker pull my-image:tag
Run and Manage Containers:

sh
Copy code
docker run -d --name my-container my-image:tag
docker run -d -p 8080:80 --name my-container my-image:tag
docker run -d -v /host/path:/container/path --name my-container my-image:tag
docker ps
docker ps -a
docker stop my-container
docker start my-container
docker restart my-container
docker rm my-container
Inspect Docker Objects:

sh
Copy code
docker inspect my-image:tag
docker inspect my-container
Manage Volumes:

sh
Copy code
docker volume create my-volume
docker volume ls
docker volume rm my-volume
Manage Networks:

sh
Copy code
docker network create my-network
docker network ls
docker network rm my-network
Docker Compose:

sh
Copy code
docker-compose up -d
docker-compose down
docker-compose logs
